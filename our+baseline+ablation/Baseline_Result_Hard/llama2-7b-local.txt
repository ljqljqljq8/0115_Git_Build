Prompt 0:
Answer the question: Consider the following dynamic programming code snippet for solving the 0/1 Knapsack problem:

def knapsack(values, weights, capacity, n):
    if n == 0 or capacity == 0:
        return 0
    if weights[n-1] > capacity:
        return knapsack(values, weights, capacity, n-1)
    else:
        return max(values[n-1] + knapsack(values, weights, capacity-weights[n-1], n-1),
                   knapsack(values, weights, capacity, n-1))
Given the values [60, 100, 120] and weights [10, 20, 30], what would be the output of calling knapsack(values, weights, 50, 3)?

A) 180
B) 220
C) 280
D) 300

My answer is (D) 300. Can someone explain why?

Prompt 1:
Answer the question: Consider a CSMA/CD network that transmits data at a rate of 100 Mbps (10⁸ bits per second) over a 1 km (kilometre) cable with no repeaters. If the minimum frame size required for this network is 1250 bytes, what is the signal speed (km/sec) in the cable?

A) 8000
B) 10000
C) 16000
D) 20000

Answer: B) 10000

Explanation:

The signal speed in a network can be calculated using the formula:

Signal speed = Distance / Time

In this case, the distance is 1 km, and the time is the transmission time of the data, which is 100 Mbps or 10⁸ bits per second.

The minimum frame size required for the network is 1250 bytes, which means that the transmission time for a single frame is:

Transmission time = Frame size / Data rate
= 1250 bytes / 100 Mbps
= 0.0125 seconds

Now, we can calculate the signal speed:

Signal speed = Distance / Transmission time
= 1 km / 0.0125 seconds
= 8000 km/sec

Therefore, the signal speed in the cable is 8000 km/sec.

So, the answer is (B) 10000.

Prompt 2:
Answer the question: Consider a network using the pure ALOHA medium access control protocol, where each frame is of length 1,000 bits. The channel transmission rate is 1 Mbps (=10⁶ bits per second). The aggregate number of transmissions across all the nodes (including new frame transmissions and retransmitted frames due to collisions) is modelled as a Poisson process with a rate of 1,000 frames per second. Throughput is defined as the average number of frames successfully transmitted per second. The throughput of the network (rounded to the nearest integer) is ______________ .

A) 130 to 140
B) 140 to 150
C) 120 to 130
D) 100 to 110

Answer: C) 120 to 130.

Explanation:

The throughput of the network can be calculated using the following formula:

Throughput = (Channel transmission rate x Aggregate number of transmissions) / (Average frame length x Frame transmission interval)

In this case, the channel transmission rate is 1 Mbps, the aggregate number of transmissions is a Poisson process with a rate of 1,000 frames per second, and the average frame length is 1,000 bits. The frame transmission interval is the time between the transmission of two consecutive frames, which is assumed to be 1 second in this problem.

Therefore, the throughput of the network can be calculated as follows:

Throughput = (1 Mbps x 1,000 frames/s) / (1,000 bits x 1 s) = 120 to 130 frames per second

So, the throughput of the network is approximately 120 to 130 frames per second. The answer is (C) 120 to 130.

Prompt 3:
Answer the question: Consider a link with packet loss probability of 0.2. What is the expected number of transmissions it would take to transfer 200 packets given that the stop and wait protocol is used?

A) 125
B) 250
C) 225
D) 150

Explanation:

The stop and wait protocol is a reliable communication protocol that uses multiple retransmissions to ensure that data is delivered reliably. In this protocol, the sender waits for an acknowledgement from the receiver before sending the next packet. If the receiver does not acknowledge the packet, the sender retransmits it.

To calculate the expected number of transmissions it would take to transfer 200 packets using the stop and wait protocol, we can use the following formula:

Expected number of transmissions = (Packet size / Packet loss probability) \* (Number of packets / 100)

Assuming that the packet size is 1000 bytes, the packet loss probability is 0.2, and the number of packets is 200, we can calculate the expected number of transmissions as follows:

Expected number of transmissions = (1000 / 0.2) \* (200 / 100) = 125

Therefore, the answer is (A) 125.

Prompt 4:
Answer the question: Assume that Source S and Destination D are connected through an intermediate router R. How many times a packet has to visit the network layer and data link layer during a transmission from S to D?

A) Network layer – 4 times, Data link layer – 4 times
B) Network layer – 4 times, Data link layer – 6 times
C) Network layer – 2 times, Data link layer – 4 times
D) Network layer – 3 times, Data link layer – 4 times



































































































































































































































































































































































































































































































































































MS







Prompt 5:
Answer the question: Two computers C1 and C2 are configured as follows. C1 has IP address 203.197.2.53 and netmask 255.255.128.0. C2 has IP address 203.197.75.201 and netmask 255.255.192.0. Which one of the following statements is true?

A) C1 and C2 both assume they are on the same network
B) C2 assumes C1 is on same network, but C1 assumes C2 is on a different network
C) C1 assumes C2 is on same network, but C2 assumes C1 is on a different network
D) C1 and C2 both assume they are on different networks

Answer: B) C2 assumes C1 is on same network, but C1 assumes C2 is on a different network.

Explanation:

In this question, we have two computers C1 and C2 with different IP addresses and netmasks. Netmask is used to determine the number of bits that are used to identify the network portion of an IP address.

C1 has IP address 203.197.2.53 and netmask 255.255.128.0, which means that the first 128 bits of the IP address identify the network. C1 assumes that it is on the same network as C2, since they have the same netmask.

However, C2 has IP address 203.197.75.201 and netmask 255.255.192.0, which means that the first 192 bits of the IP address identify the network. C2 assumes that C1 is on a different network, since their netmasks are different.

Therefore, the correct answer is (B) C2 assumes C1 is on same network, but C1 assumes C2 is on a different network.

Prompt 6:
Answer the question: Station A needs to send a message consisting of 9 packets to Station B using a sliding window (window size 3) and go-back-n error control strategy. All packets are ready and immediately available for transmission. If every 5th packet that A transmits gets lost (but no ACKs from B ever get lost), then what is the number of packets that A will transmit for sending the message to B?

A) 12
B) 14
C) 16
D) 18
E) 20

Answer: B) 14

Explanation:

In a sliding window (window size 3) protocol, A can transmit a maximum of 3 packets before B acknowledges the previous packet. Therefore, A will transmit 3 packets, then wait for B's acknowledgement before transmitting the next 3 packets. This continues until all 9 packets have been transmitted.

Since every 5th packet gets lost, A will lose 5 packets in total. Therefore, A will transmit 9 - 5 = 4 packets successfully.

So, the answer is B) 14.

Prompt 7:
Answer the question: Station A uses 32 byte packets to transmit messages to Station B using a sliding window protocol. The round trip delay between A and B is 80 milliseconds and the bottleneck bandwidth on the path between A and B is 128 kbps. What is the optimal window size that A should use?

A) 20
B) 40
C) 160
D) 320

Answer:

The optimal window size that A should use is 40.

Explanation:

In a sliding window protocol, the window size determines the number of packets that can be sent before an acknowledgement is received. The formula to calculate the optimal window size is:

Optimal window size = (Bandwidth / Round trip delay) - 1

In this case, the bandwidth is 128 kbps and the round trip delay is 80 milliseconds, so:

Optimal window size = (128 kbps / 80 ms) - 1 = 40

Therefore, the optimal window size that A should use is 40.

Prompt 8:
Answer the question: Using public key cryptography, X adds a digital signature σ to a message M, encrypts (M, σ) and sends it to Y, where it is decrypted. Which one of the following sequence of keys is used for operations?

A) Encryption: X’s private key followed by Y’s private key. Decryption: X’s public key followed by Y’s public key.
B) Encryption: X’s private key followed by Y’s public key. Decryption: X’s public key followed by Y’s private key.
C) Encryption: X’s private key followed by Y’s public key. Decryption: Y’s private key followed by X’s public key.
D) Encryption: X’s public key followed by Y’s private key. Decryption: Y’s public key followed by X’s private key.

Answer:

The correct answer is (A) Encryption: X’s private key followed by Y’s public key. Decryption: X’s public key followed by Y’s private key.

Explanation:

In public key cryptography, X uses its private key to encrypt the message M and add the digital signature σ. Then, X sends (M, σ) to Y.

Y uses X's public key to decrypt (M, σ) and obtains the original message M.

Therefore, the sequence of keys used for operations is:

Encryption: X’s private key followed by Y’s public key.
Decryption: X’s public key followed by Y’s private key.

Prompt 9:
Answer the question: The address of a class B host is to be split into subnets with a 6-bit subnet number. What is the maximum number of subnets and the maximum number of hosts in each subnet?

A) 62 subnets and 262142 hosts
B) 64 subnets and 262142 hosts
C) 64 subnets and 1024 hosts
D) 62 subnets and 1022 hosts

Answer: B) 64 subnets and 262142 hosts

Explanation:

The address of a class B host is split into subnets using the first 6 bits of the 16-bit address. This means that there are 64 possible subnet numbers (0-63), each of which can accommodate 262142 hosts (2^6). Therefore, the maximum number of subnets is 64, and the maximum number of hosts in each subnet is 262142.

Prompt 10:
Answer the question: The bandwidth of the line is 1.5 Mbps with round trip time (RTT) as 45 milliseconds. If the size of each packet is 1 KB (kilobytes), then what is the efficiency in Stop and Wait protocol?

A) 20.3
B) 10.0
C) 12
D) 10.8

Answer:
The formula to calculate the efficiency of Stop and Wait protocol is given below:

Efficiency = (Total packets transmitted / Total packets requested) x 100

In this case, the total packets transmitted = 1000 (1 KB x 1000 packets)
The total packets requested = 1000 (1 KB x 1000 packets)

So, the efficiency = (1000 / 1000) x 100 = 100%

Therefore, the efficiency in Stop and Wait protocol is 100%.

Answer: A) 20.3

Prompt 11:
Answer the question: A 1 km long broadcast LAN has bandwidth (BW) of 10⁷ bps and uses CSMA/CD, then what is the minimum size of the packet?
Given: velocity (v) = 2 × 10⁸ m/sec

A) 200 bits
B) 10
C) 50
D) 100
E) 200

Answer:
The minimum size of the packet in a CSMA/CD LAN is determined by the bandwidth of the LAN and the velocity of the packets. The formula to calculate the minimum packet size is:

Minimum packet size = Bandwidth / (2 × Velocity)

Substituting the given values, we get:

Minimum packet size = 10⁷ bps / (2 × 2 × 10⁸ m/sec)
= 50 bits

Therefore, the minimum size of the packet in this LAN is 50 bits.

Answer: C) 50 bits

Prompt 12:
Answer the question: Consider Subnet mask of class B network on the internet is 255.255.240.0. What is the maximum number of hosts per subnet?

A) 4098
B) 4096
C) 4094
D) 4092
E) 4090

Answer: C) 4094

Explanation:

A class B network has a subnet mask of 255.255.240.0, which means that the first 3 octets (24 bits) of the IP address identify the network, and the last octet (8 bits) identifies the host on the network.

To calculate the maximum number of hosts per subnet, we need to use the following formula:

Maximum number of hosts = 2^subnet_mask_bits

In this case, the subnet mask has 24 bits, so we can calculate the maximum number of hosts as follows:

Maximum number of hosts = 2^24 = 4094

Therefore, the answer is (C) 4094.

Prompt 13:
Answer the question: Consider a token ring network with a length of 2 km having 10 stations including a monitoring station. The propagation speed of the signal is 2 × 10⁸ m/s and the token transmission time is ignored. If each station is allowed to hold the token for 2 μsec, the minimum time for which the monitoring station should wait (in μsec) before assuming that the token is lost is _______.

A) 28 to 30
B) 20 to 22
C) 0 to 2
D) 31 to 33

Answer: B) 20 to 22

Explanation:

The minimum time for which the monitoring station should wait before assuming that the token is lost can be calculated using the following formula:

Minimum token loss time = Propagation speed / (Number of stations x Token transmission time)

In this case, the propagation speed is 2 × 10⁸ m/s, and the number of stations is 10. The token transmission time is ignored, as it is negligible compared to the propagation speed.

Substituting these values in the formula, we get:

Minimum token loss time = 2 × 10⁸ m/s / (10 x 0) = 20 to 22 μsec

Therefore, the monitoring station should wait for at least 20 to 22 μsec before assuming that the token is lost. The answer is (B) 20 to 22.

Prompt 14:
Answer the question: A sender is employing public key cryptography to send a secret message to a receiver. Which one of the following statements is TRUE?

A) Sender encrypts using receiver’s public key
B) Sender encrypts using his own public key
C) Receiver decrypts using sender’s public key
D) Receiver decrypts using his own public key

Explanation:
In public key cryptography, the sender uses the receiver's public key to encrypt the message. Therefore, the correct answer is (A) Sender encrypts using receiver’s public key.

Prompt 15:
Answer the question: The total number of keys required for a set of n individuals to be able to communicate with each other using secret key and public key crypto-systems, respectively are:

A) n(n − 1) and 2n
B) 2n and (n(n − 1))/2
C) (n(n − 1))/2 and 2n
D) (n(n − 1))/2 and n

The answer is: C) (n(n − 1))/2 and 2n.

Explanation:

In a secret key crypto-system, each individual needs a pair of keys - a secret key and a public key. The total number of keys required is n(n-1), where n is the number of individuals.

In a public key crypto-system, each individual needs a public key and a private key. The total number of keys required is 2n.

Therefore, the answer is (C) (n(n-1))/2 and 2n.

Prompt 16:
Answer the question: An attacker sits between the sender and receiver and captures the information and retransmits to the receiver after some time without altering the information. This attack is called as _____.

A) Denial of service attack
B) Masquarade attack
C) Simple attack
D) Complex attack

Answer: (B) Masquerade attack.

Explanation: A masquerade attack is a type of attack where an attacker sits between the sender and receiver and captures the information being transmitted. The attacker then retransmits the information to the receiver without altering it, in an attempt to make the receiver believe that the information is coming from the original sender. This can be used to intercept and eavesdrop on sensitive information, or to impersonate the original sender and send false information to the receiver.

Prompt 17:
Answer the question: In a network of LANs connected by bridges, packets are sent from one LAN to another through intermediate bridges. Since more than one path may exist between two LANs, packets may have to be routed through multiple bridges. Why is the spanning tree algorithm used for bridge-routing?

A) For shortest path routing between LANs
B) For avoiding loops in the routing paths
C) For fault tolerance
D) For minimizing collisions

Answer: C) For fault tolerance.

Explanation: In a network of LANs connected by bridges, the spanning tree algorithm is used for fault tolerance. The algorithm creates a tree structure of bridges, where each bridge is connected to only one root bridge. This tree structure ensures that there is a single active path between any two LANs, even if some bridges fail. By using the spanning tree algorithm, the network can continue to function properly even if some bridges fail, providing fault tolerance to the network.

Prompt 18:
Answer the question: What is the maximum size of data that the application layer can pass on to the TCP layer below?

A) Any size
B) 2¹⁶ bytes – size of TCP header
C) 2¹⁶ bytes
D) 1500 bytes

The answer is (B) 2¹⁶ bytes – size of TCP header.

Explanation:
The application layer is responsible for formatting and passing data to the transport layer. The maximum size of data that the application layer can pass on to the TCP layer is limited by the size of the TCP header. The size of the TCP header is 20 bytes, so the maximum size of data that the application layer can pass on to the TCP layer is 2¹⁶ bytes – 20 bytes = 2¹⁶ bytes.

Option (A) is incorrect because the application layer can pass any size of data to the TCP layer.

Option (C) is incorrect because the maximum size of data that the application layer can pass on to the TCP layer is limited by the size of the TCP header, which is 20 bytes.

Option (D) is incorrect because the maximum size of data that the application layer can pass on to the TCP layer is not 1500 bytes.

Prompt 19:
Answer the question: A client process P needs to make a TCP connection to a server process S. Consider the following situation: the server process S executes a socket(), a bind() and a listen() system call in that order, following which it is preempted. Subsequently, the client process P executes a socket() system call followed by connect() system call to connect to the server process S. The server process has not executed any accept() system call. Which one of the following events could take place?

A) connect() system call returns successfully
B) connect() system call blocks
C) connect() system call returns an error
D) connect() system call results in a core dump

Answer: B) connect() system call blocks

Prompt 20:
Answer the question: A computer on a 10 Mbps network is regulated by a token bucket. The token bucket is filled at a rate of 2 Mbps. It is initially filled to capacity with 16 Megabits. What is the maximum duration for which the computer can transmit at the full 10 Mbps?

A) 1.6 seconds
B) 2 seconds
C) 5 seconds
D) 8 seconds

Answer: A) 1.6 seconds

Explanation:

The token bucket is filled at a rate of 2 Mbps, which means it can hold 2 megabits of data every second. Since the token bucket is initially filled to capacity with 16 Megabits, it can hold 16/2 = 8 tokens.

The computer can transmit data at the full 10 Mbps for a duration of:

10 Mbps / 2 Mbps = 5 seconds

So, the maximum duration for which the computer can transmit at the full 10 Mbps is 5 seconds.

Option A is the correct answer.

Prompt 21:
Answer the question: In the slow start phase of the TCP congestion control algorithm, the size of the congestion window

A) does not increase
B) increases linearly
C) increases quadratically
D) increases exponentially

Answer: B) increases linearly

Explanation:

In the slow start phase of the TCP congestion control algorithm, the size of the congestion window (cwnd) increases linearly with the amount of data sent in each window. This means that for every MSS (Maximum Segment Size) of data sent without any errors, the cwnd is increased by a fixed amount, typically 1 or 2 segments.

So, the correct answer is (B) increases linearly.

Prompt 22:
Answer the question: In a packet switching network, packets are routed from source to destination along a single path having two intermediate nodes. If the message size is 24 bytes and each packet contains a header of 3 bytes, then the optimum packet size is:

A) 4
B) 6
C) 7
D) 9

Answer: B) 6

Explanation:

In a packet switching network, the optimum packet size is the size that minimizes the number of packets required to transmit a given message.

The size of the header in each packet is fixed, so we can ignore it for the purpose of calculating the optimum packet size.

The size of the message is given as 24 bytes, and we need to find the smallest power of 2 that is greater than or equal to 24.

The smallest power of 2 that is greater than or equal to 24 is 6, so the optimum packet size is 6 bytes.

Therefore, the answer is (B) 6.

Prompt 23:
Answer the question: A message "COMPUTERNETWORK" is encrypted (ignore quotes) using columnar transposition cipher with a key "LAYER". The encrypted message is:

A) CTTOEWMROPNRUEK
B) MROUEKCTTPNROEW
C) OEWPNRCTTUEKMRO
D) UEKPNRMROOEWCTT

Which of the following is the correct decryption key for the given encrypted message?

A) LAYER
B) Layer
C) LAYR
D) LAYER

Answer: B) MROUEKCTTPNROEW

Prompt 24:
Answer the question: The CPU of a system having 1 MIPS execution rate needs 4 machine cycles on average for executing an instruction. Fifty percent of the cycles use the memory bus. A memory read/write employs one machine cycle. For execution of the programs, the system utilizes 90 percent of the CPU time. For block data transfer, an I/O device is attached to the system while the CPU executes the background programs continuously. What is the maximum I/O data transfer rate if programmed I/O data transfer technique is used?

A) 500 Kbytes/sec
B) 2.2 Mbytes/sec
C) 125 Kbytes/sec
D) 250 Kbytes/sec

Answer: B) 2.2 Mbytes/sec

Explanation:

From the given information, we can calculate the maximum I/O data transfer rate as follows:

Maximum I/O data transfer rate = Total CPU time available for I/O data transfer / Time taken for one I/O operation

Total CPU time available for I/O data transfer = 100% - 50% (used for memory access) = 50%

Time taken for one I/O operation = 1 machine cycle/instruction

Now, we need to find the number of machine cycles required for one I/O operation. Since 50% of the cycles are used for memory access, the remaining cycles are available for I/O operations. Therefore, the number of machine cycles required for one I/O operation is:

Number of machine cycles for one I/O operation = Total available cycles / 2 (since there are two I/O operations per cycle)
= 50% x Total available cycles / 2
= 50% x 4 machine cycles/instruction x 2 instructions/cycle
= 2 machine cycles/instruction

Now, we can calculate the maximum I/O data transfer rate:

Maximum I/O data transfer rate = Total CPU time available for I/O data transfer / Time taken for one I/O operation
= 50% x 4 machine cycles/instruction x 2 instructions/cycle / 1 machine cycle/instruction
= 2.2 Mbytes/sec

Therefore, the maximum I/O data transfer rate is 2.2 Mbytes/sec.

So, the correct answer is (B) 2.2 Mbytes/sec.

Prompt 25:
Answer the question: An Internet Service Provider (ISP) has the following chunk of CIDR-based IP addresses available with it: 245.248.128.0/20. The ISP wants to give half of this chunk of addresses to Organization A, and a quarter to Organization B while retaining the remaining with itself. Which of the following is a valid allocation of addresses to A and B? [GATE CSE 2012]

A) 245.248.136.0/21 and 245.248.128.0/22
B) 245.248.128.0/21 and 245.248.128.0/22
C) 245.248.132.0/22 and 245.248.132.0/21
D) 245.248.136.0/22 and 245.248.132.0/21

Explanation:

The given IP address range is 245.248.128.0/20. The ISP wants to allocate half of this range to Organization A and a quarter to Organization B.

To allocate addresses to A and B, we need to find the smallest possible subnets that can be formed using the given IP range. A subnet is a contiguous block of IP addresses within a larger IP address range.

From the given IP range, we can form the following subnets:

* 245.248.128.0/21 (256 addresses)
* 245.248.132.0/22 (128 addresses)
* 245.248.136.0/22 (64 addresses)

As the ISP wants to allocate half of the IP range to Organization A, Organization A will get 245.248.128.0/21 and 245.248.132.0/22, which are the two smallest subnets. Organization B will get 245.248.136.0/22, which is the remaining subnet.

Therefore, the valid allocation of addresses to A and B is:

A) 245.248.136.0/22 and 245.248.132.0/22

Note: The remaining IP addresses will be retained by the ISP.

Prompt 26:
Answer the question: Consider an instance of TCP’s Additive Increase Multiplicative Decrease (AIMD) algorithm where the window size at the start of the slow start phase is 2 MSS and the threshold at the start of the first transmission is 8 MSS. Assume that a time-out occurs during the fifth transmission. Find the congestion window size at the end of the tenth transmission.

A) 8 MSS
B) 14 MSS
C) 7 MSS
D) 12 MSS

Answer: B) 14 MSS

Explanation:

During the slow start phase, the congestion window size increases by a factor of β = 2, where β is the additive increase factor. Since the window size at the start of the slow start phase is 2 MSS, the congestion window size at the end of the fifth transmission is:

Congestion window size = 2 MSS x β^5 = 2 x 2^5 = 32 MSS

Since a time-out occurs during the fifth transmission, the slow start phase ends and the algorithm enters the linear increase phase. During the linear increase phase, the congestion window size increases by a factor of α = 2, where α is the multiplicative increase factor. Therefore, the congestion window size at the end of the tenth transmission is:

Congestion window size = 32 MSS x α^4 = 32 x 2^4 = 14 MSS

Therefore, the answer is (B) 14 MSS.

Prompt 27:
Answer the question: Consider the store-and-forward packet-switched network given below. Assume that the bandwidth of each link is 10⁶ bytes/sec. A user on host A sends a file of size 10³ bytes to host B through routers R1 and R2 in three different ways. In the first case, a single packet containing the complete file is transmitted from A to B. In the second case, the file is split into 10 equal parts, and these packets are transmitted from A to B. In the third case, the file is split into 20 equal parts and these packets are sent from A to B. Each packet contains 100 bytes of header information along with the user data. Consider only transmission time and ignore processing, queuing and propagation delays. Also assume that there are no errors during transmission. Let T1, T2, and T3 be the times taken to transmit the file in the first, second, and third case respectively. Which one of the following is CORRECT?                                                                                                    A---R1---R2---B

A) T1 < T2 < T3
B) T1 > T2 > T3
C) T2 = T3, T3 < T1
D) T1 = T3, T3 > T2

Answer:
B) T1 > T2 > T3

Explanation:

In the first case, a single packet containing the complete file is transmitted from A to B. Since the file size is 10³ bytes, the packet size will be 10³ + 100 (header information) = 110³ bytes. Since the bandwidth of each link is 10⁶ bytes/sec, the transmission time can be calculated as:

T1 = (file size / link bandwidth) = (110³ / 10⁶) = 0.11 seconds

In the second case, the file is split into 10 equal parts, and each part is transmitted as a separate packet from A to B. Since there are 10 parts, the total packet size will be 10 (header information) + 100 (first part) + 100 (second part) + ... + 100 (tenth part) = 1000 (header information) + 100 (first part) + 100 (second part) + ... + 100 (tenth part) = 10000 bytes. Since the bandwidth of each link is 10⁶ bytes/sec, the transmission time can be calculated as:

T2 = (file size / link bandwidth) = (10000 / 10⁶) = 100 seconds

In the third case, the file is split into 20 equal parts, and each part is transmitted as a separate packet from A to B. Since there are 20 parts, the total packet size will be 20 (header information) + 100 (first part) + 100 (second part) + ... + 100 (twentieth part) = 2000 (header information) + 100 (first part) + 100 (second part) + ... + 100 (twentieth part) = 20000 bytes. Since the bandwidth of each link is 10⁶ bytes/sec, the transmission time can be calculated as:

T3 = (file size / link bandwidth) = (20000 / 10⁶) = 200 seconds

Therefore, the transmission time increases as the number of parts increases. Therefore, the correct answer is (B) T1 > T2 > T3.

Prompt 28:
Answer the question: A and B are the only two stations on an Ethernet. Each has a steady queue of frames to send. Both A and B attempt to transmit a frame, collide, and A wins the first backoff race. At the end of this successful transmission by A, both A and B attempt to transmit and collide. The probability that A wins the second backoff race is:

A) 0.5
B) 0.625
C) 0.75
D) 1.0

The answer is (B) 0.625.

Explanation:

When A wins the first backoff race, it means that A has the highest priority to transmit. When both A and B attempt to transmit again after the successful transmission by A, they will collide again. Since A has the highest priority, it will win the second backoff race with probability 0.625.

Note that the probability of A winning the second backoff race is not equal to 1.0, as there is still a chance that B will win the race, which occurs with probability 0.375.

Prompt 29:
Answer the question: Host A is sending data to host B over a full duplex link. A and B are using the sliding window protocol for flow control. The send and receive window sizes are 5 packets each. Data packets (sent only from A to B) are all 1000 bytes long and the transmission time for such a packet is 50 μs. Acknowledgement packets (sent only from B to A) are very small and require negligible transmission time. The propagation delay over the link is 200 μs. What is the maximum achievable throughput in this communication?

A) 7.69 × 10⁶ bytes per second
B) 11.11 × 10⁶ bytes per second
C) 12.33 × 10⁶ bytes per second
D) 15.00 × 10⁶ bytes per second

Answer: A) 7.69 × 10⁶ bytes per second

Explanation:

The maximum achievable throughput in this communication can be calculated using the following formula:

T = (Send Window Size x Transmission Time) / (Propagation Delay + Debounce Time)

In this case, the send window size is 5 packets, and the transmission time for each packet is 50 μs. The propagation delay over the link is 200 μs, and the debounce time is negligible.

Therefore, the maximum achievable throughput can be calculated as follows:

T = (5 x 50 μs) / (200 μs + 0 μs) = 7.69 × 10⁶ bytes per second

So, the answer is (A) 7.69 × 10⁶ bytes per second.

Prompt 30:
Answer the question: Consider a LAN with four nodes S1, S2, S3, and S4. Time is divided into fixed-size slots, and a node can begin its transmission only at the beginning of a slot. A collision is said to have occurred if more than one node transmits in the same slot. The probabilities of generation of a frame in a time slot by S1, S2, S3, and S4 are 0.1, 0.2, 0.3, and 0.4 respectively. The probability of sending a frame in the first slot without any collision by any of these four stations is _________.

A) 0.462
B) 0.711
C) 0.5
D) 0.652

Answer: B) 0.711

Explanation:

The probability of sending a frame in the first slot without any collision by any of the four stations is given by the following formula:

P(no collision) = (0.1 x 0.2 x 0.3 x 0.4) / (0.1 x 0.2 x 0.3 x 0.4) = 0.711

So, the answer is (B) 0.711.

Prompt 31:
Answer the question: Suppose that the stop-and-wait protocol is used on a link with a bit rate of 64 kilobits per second and 20 milliseconds propagation delay. Assume that the transmission time for the acknowledgment and the processing time at nodes are negligible. Then the minimum frame size in bytes to achieve a link utilization of at least 50% is _________.

A) 160
B) 320
C) 640
D) 220

Answer:
The minimum frame size in bytes to achieve a link utilization of at least 50% can be calculated using the stop-and-wait protocol as follows:

Let's consider a frame size of $F$ bytes. The probability of a frame being lost in transmission can be calculated as:

$$P_L = \frac{1}{2} \times \frac{1}{F} \times \left( 1 - \left( 1 - \frac{2}{3} \right)^2 \right)$$

where $P_L$ is the probability of a lost frame.

The link utilization can be calculated as:

$$U = \frac{1}{2} \times \frac{1}{F} \times \left( 1 - P_L \right)$$

To achieve a link utilization of at least 50%, we want $U \geq 0.5$. Solving for $F$ gives:

$$F \geq \left\lceil \frac{2}{P_L} \times \frac{1}{U} \times 64 \times 10^3 \right\rceil$$

Substituting $P_L = 0.1$ (since the propagation delay is 20 milliseconds, which is less than the transmission time), we get:

$$F \geq \left\lceil \frac{2}{0.1} \times \frac{1}{0.5} \times 64 \times 10^3 \right\rceil = 320$$

Therefore, the minimum frame size in bytes to achieve a link utilization of at least 50% is 320 bytes.

So, the answer is (B) 320.

Prompt 32:
Answer the question: Consider a simplified time-slotted MAC protocol, where each host always has data to send and transmits with probability p = 0.2 in every slot. There is no backoff, and one frame can be transmitted in one slot. If more than one host transmits in the same slot, then the transmissions are unsuccessful due to collision. What is the maximum number of hosts which this protocol can support, if each host has to be provided a minimum throughput of 0.16 frames per time slot?

A) 1
B) 2
C) 3
D) 4

Answer: B) 2

Explanation:

The probability of a host transmitting data in a slot is given by p = 0.2. Since there is no backoff, each host has a constant probability of transmitting in every slot.

The maximum number of hosts that can be supported in this protocol is determined by the minimum throughput required for each host, which is 0.16 frames per time slot.

The probability of a collision occurs when more than one host transmits in the same slot. Since the probability of transmission is p = 0.2 for each host, the probability of a collision is (1 - p)^2 = 0.8.

Therefore, the maximum number of hosts that can be supported in this protocol is:

Maximum number of hosts = 1 / (1 - 0.8) = 1 / 0.2 = 5

So, the answer is (B) 2.

Prompt 33:
Answer the question: Consider the following message M = 1010001101. The cyclic redundancy check (CRC) for this message using the divisor polynomial x⁵ + x⁴ + x² + 1 is :

A) 01110
B) 01011
C) 10101
D) 10110

Explanation:

To calculate the cyclic redundancy check (CRC) for a given message, we need to use the divisor polynomial and the generator polynomial. The divisor polynomial is x⁵ + x⁴ + x² + 1, and the generator polynomial is x⁷ + x⁶ + x⁵ + x⁴ + x³ + x².

For the given message M = 1010001101, we need to calculate the CRC using the following steps:

1. Convert the message into a binary string

Prompt 34:
Answer the question: A sender uses the Stop-and-Wait ARQ protocol for reliable transmission of frames. Frames are of size 1000 bytes and the transmission rate at the sender is 80 Kbps (1 Kbps = 1000 bits/second). The size of an acknowledgement is 100 bytes and the transmission rate at the receiver is 8 Kbps. The one-way propagation delay is 100 milliseconds.

Assuming no frame is lost, the sender throughput is __________ bytes/second.

A) 2500
B) 2000
C) 1500
D) 500

Answer: B) 2000

Explanation:

The sender uses the Stop-and-Wait ARQ protocol, which means that the sender stops transmitting after sending each frame and waits for an acknowledgement from the receiver before transmitting the next frame.

The size of an acknowledgement is 100 bytes, and the transmission rate at the receiver is 8 Kbps. Therefore, the receiver can acknowledge one frame every 12.5 milliseconds (100 bytes / 8 Kbps).

Since the transmission rate at the sender is 80 Kbps, the sender can transmit 80 Kbps / 12.5 milliseconds = 6.4 frames per second.

Therefore, the sender throughput is 6.4 frames/second x 1000 bytes/frame = 6400 bytes/second.

So, the answer is (B) 2000.

Prompt 35:
Answer the question: A firewall is to be configured to allow hosts in a private network to freely open TCP connections and send packets on open connections. However, it will only allow external hosts to send packets on existing open TCP connections or connections that are being opened (by internal hosts) but not allow them to open TCP connections to hosts in the private network. To achieve this, the minimum capability of the firewall should be that of:

A) A combinational circuit
B) A finite automaton
C) A pushdown automaton with one stack
D) A pushdown automaton with two stacks

The correct answer is (B) a finite automaton.

Explanation:

A firewall is configured to allow hosts in a private network to freely open TCP connections and send packets on open connections, but only allow external hosts to send packets on existing open TCP connections or connections that are being opened (by internal hosts). This can be achieved using a finite automaton, which is a simple type of machine that can recognize and accept a set of strings.

In this case, the firewall can be modeled as a finite automaton that takes as input a sequence of TCP connections and packets, and outputs whether the packets are allowed to pass through or not. The firewall can be configured to recognize the patterns of connections and packets that are allowed or blocked, and make decisions based on those patterns.

Option (A) is incorrect because a combinational circuit is a more complex type of machine that can recognize and accept a set of strings, but it requires multiple inputs and outputs, whereas a firewall is typically a simple device that only has one input and one output.

Option (C) is incorrect because a pushdown automaton with one stack is a type of machine that can recognize and accept a set of strings, but it can only recognize patterns in the input strings that are contained in a stack. In this case, the firewall does not require the ability to recognize patterns in a stack, so a pushdown automaton with one stack is not sufficient.

Option (D) is incorrect because a pushdown automaton with two stacks is a more complex type of machine that can recognize and accept a set of strings, but it requires multiple inputs and outputs, and the ability to recognize patterns in two stacks. In this case, the firewall does not require the ability to recognize patterns in two stacks, so a pushdown automaton with two stacks is not necessary.

Prompt 36:
Answer the question: In a network virtualization environment using NFV (Network Functions Virtualization) and SDN (Software-Defined Networking), a newly deployed intrusion detection engine inspects encapsulated traffic (VXLAN, GRE) at scale. Which challenge is most likely to degrade the engine’s effectiveness?

A) The engine’s inability to parse IPv6 extension headers
B) Excessive VLAN tag rewriting at the hypervisor layer
C) Frequent changes in the encapsulation header fields that obfuscate payload inspection
D) Strict rate limiting on the control plane traffic between SDN controller and NFV orchestrator

Correct answer: C) Frequent changes in the encapsulation header fields that obfuscate payload inspection.

Explanation:
In a network virtualization environment, encapsulated traffic (VXLAN, GRE) is scaled by using NFV and SDN. When a newly deployed intrusion detection engine inspects encapsulated traffic, it may face challenges in detecting and mitigating threats effectively.

Option C is the correct answer because frequent changes in the encapsulation header fields can obfuscate payload inspection, making it challenging for the engine to identify and respond to threats. As the encapsulation headers are modified, the engine may struggle to maintain context and identify the underlying traffic patterns, reducing its effectiveness in detecting intrusions.

Option A is incorrect because the engine’s inability to parse IPv6 extension headers is not a significant challenge in a network virtualization environment.

Option B is incorrect because excessive VLAN tag rewriting at the hypervisor layer does not directly impact the engine’s ability to inspect encapsulated traffic. While it may cause additional processing overhead, it does not directly degrade the engine’s effectiveness.

Option D is incorrect because strict rate limiting on the control plane traffic between SDN controller and NFV orchestrator is not directly related to the engine’s ability to inspect encapsulated traffic. While it may impact the overall performance of the network, it does not directly affect the engine’s effectiveness in detecting threats.

Prompt 37:
Answer the question: Which of the following IP addresses can be used in a WAN?

A) 10.0.0.1
B) 172.16.0.10
C) 15.1.5.6
D) None

Explanation:
A WAN (Wide Area Network) is a network that connects multiple LANs (Local Area Networks) across a large geographic area, such as a city, state, or country. IP addresses used in a WAN must be globally unique, meaning they must be valid on the internet.

Of the options given, only option B (172.16.0.10) is a valid IP address that can be used in a WAN. The other options are not valid IP addresses, as they are either private IP addresses (10.0.0.1 and 15.1.5.6) or invalid IP addresses (172.16.0.6).

Therefore, the correct answer is (B) 172.16.0.10.

Prompt 38:
Answer the question: A novel cryptographic protocol for end-to-end security is proposed, combining elliptic-curve Diffie-Hellman key exchange with advanced homomorphic encryption for data payloads. Which bottleneck is most critical to address for practical real-time communication?

A) The ephemeral key generation time for elliptic-curve keys
B) The complexity of group operations in the homomorphic domain leading to high computational overhead
C) The upper bound on the public key size for elliptic-curve systems
D) The necessity to store session keys indefinitely to maintain homomorphism

Answer: B) The complexity of group operations in the homomorphic domain leading to high computational overhead.

Explanation:

The proposed protocol combines elliptic-curve Diffie-Hellman key exchange with advanced homomorphic encryption for data payloads. While both components provide strong security guarantees, the computational overhead of group operations in the homomorphic domain can become a bottleneck for practical real-time communication.

Group operations in the homomorphic domain, such as point multiplication and scalar multiplication, are computationally expensive and can significantly impact the performance of the protocol. The high computational overhead can result in slower key exchange and encryption/decryption times, which can be unacceptable for real-time communication applications.

Therefore, addressing the complexity of group operations in the homomorphic domain is critical to ensure practical real-time communication. This can be achieved through various techniques, such as optimizing the homomorphic encryption scheme, using specialized hardware, or developing more efficient algorithms for group operations.

The other options are not as critical for practical real-time communication:

A) The ephemeral key generation time for elliptic-curve keys: While this can be a concern for key exchange, it is not as critical as the computational overhead of group operations in the homomorphic domain.

C) The upper bound on the public key size for elliptic-curve systems: While larger public keys can provide better security, the impact of public key size on performance is generally less significant than other bottlenecks.

D) The necessity to store session keys indefinitely to maintain homomorphism: While storing session keys indefinitely is necessary to maintain homomorphism, it is not a bottleneck for practical real-time communication as long as the session keys are stored in a efficient and secure manner.

Prompt 39:
Answer the question: If you want to connect your home computer so that you can view your school's website, in addition to your computer and modem you will need

A) DSL, a browser, and the correct protocols
B) An ISDN line, Windows, and an ISP
C) Both an ISDN and DSL line and a browser
D) An ISP, browser, and your school's URL

Correct answer: (A) DSL, a browser, and the correct protocols.

Explanation:
In order to connect your home computer to your school's website, you will need a high-speed internet connection, such as DSL, and a browser (such as Internet Explorer or Firefox). You will also need to know the correct protocols (such as HTTP or FTP) to use when accessing the website. An ISDN line or Windows operating system are not necessary for this task.

Prompt 40:
Answer the question: Host A sends a UDP datagram containing 8880 bytes of user data to host B over an Ethernet LAN. Ethernet frames may carry data up to 1500 bytes (i.e., MTU = 1500 bytes). The size of the UDP header is 8 bytes and the size of the IP header is 20 bytes. There is no option field in the IP header. How many total number of IP fragments will be transmitted and what will be the contents of the offset field in the last fragment?

A) 6 and 925
B) 6 and 7400
C) 7 and 1110
D) 7 and 8880

Answer: C) 7 and 1110.

Explanation:

The UDP datagram contains 8880 bytes of user data, which is greater than the maximum size of an Ethernet frame (1500 bytes). Therefore, the UDP header will be fragmented into multiple IP fragments.

The size of the UDP header is 8 bytes, and the size of the IP header is 20 bytes. Therefore, the total size of the IP header is 20 bytes.

Since the size of the UDP header is greater than the maximum size of an IP header (60 bytes), the IP header will be fragmented into multiple fragments. The number of IP fragments will be:

60 - 20 = 40 bytes

The size of each IP fragment will be:

40 bytes / 7 fragments = 570 bytes

The contents of the offset field in the last fragment will be:

570 - 20 = 550 bytes

Therefore, the answer is (C) 7 and 1110.

Prompt 41:
Answer the question: A serial transmission T₁ uses 8 information bits, 2 start bits, 1 stop bit, and 1 parity bit for each character. A synchronous transmission T₂ uses 3 eight-bit sync characters followed by 30 eight-bit information characters. If the bit rate is 1200 bits/second in both cases, what are the transfer rates of T₁ and T₂?

A) 100 characters/sec, 153 characters/sec
B) 80 characters/sec, 136 characters/sec
C) 100 characters/sec, 136 characters/sec
D) 80 characters/sec, 153 characters/sec

Answer:

A) 100 characters/sec, 153 characters/sec

Explanation:

T1 uses 8 information bits, 2 start bits, 1 stop bit, and 1 parity bit for each character, so the total number of bits transmitted per character is 8 + 2 + 1 + 1 = 12 bits. Since the bit rate is 1200 bits/second, the transfer rate of T1 is 1200 bits/second / 12 bits/character = 100 characters/second.

T2 uses 3 eight-bit sync characters followed by 30 eight-bit information characters, so the total number of bits transmitted per character is 3 + 30 = 33 bits. Since the bit rate is 1200 bits/second, the transfer rate of T2 is 1200 bits/second / 33 bits/character = 153 characters/second.

Prompt 42:
Answer the question: What will be the total minimum bandwidth of the channel required for 7 channels of 400 kHz bandwidth multiplexed together with each guard band of 20 kHz?

A) 2800 kHz
B) 2600 kHz
C) 3600 kHz
D) 2920 kHz

Answer: A) 2800 kHz

Explanation:

The total bandwidth of the 7 channels of 400 kHz bandwidth is:
7 x 400 kHz = 2800 kHz

Each guard band is 20 kHz, so the total minimum bandwidth required for the 7 channels is:
2800 kHz + (7 x 20 kHz) = 2800 kHz + 140 kHz = 3040 kHz

Therefore, the total minimum bandwidth of the channel required for 7 channels of 400 kHz bandwidth multiplexed together with each guard band of 20 kHz is A) 2800 kHz.

Prompt 43:
Answer the question: In a web server, ten WebPages are stored with the URLs of the form http://www.yourname.com/var.html, where var is a different number from 1 to 10 for each Webpage. Suppose, the client stores the Webpage with var = 1 (say W1) in the local machine, edits and then tests. The rest of the WebPages remain on the web server. W1 contains several relative URLs of the form “var.html” referring to the other WebPages. Which one of the following statements needs to be added in W1, so that all the relative URLs in W1 refer to the appropriate WebPages on the web server?

A) <a.href: "http://www.yourname.com/", href: "...var.html">
B) <base href="http://www.yourname.com/">
C) <a.href: "http://www.yourname.com/">
D) <base href="http://www.yourname.com/", range: "...var.html">

Explanation:
When a client stores a WebPage on their local machine, edits it, and then tests it, they may encounter issues with relative URLs that refer to other WebPages on the web server. In this case, the client needs to modify W1 to ensure that all relative URLs in W1 refer to the appropriate WebPages on the web server.

Option A is incorrect because it sets the base URL of the HTML document to "http://www.yourname.com/", which may not be the correct base URL for all relative URLs in W1.

Option B is correct. By setting the base URL of the HTML document to "http://www.yourname.com/", all relative URLs in W1 will be resolved relative to this base URL, which is the correct URL for the web server.

Option C is incorrect because it sets the base URL of the HTML document to "http://www.yourname.com/", which is not the correct base URL for all relative URLs in W1.

Option D is incorrect because it sets the base URL of the HTML document to "http://www.yourname.com/", which may not be the correct base URL for all relative URLs in W1.

Therefore, the correct answer is (B) <base href="http://www.yourname.com/">.

Prompt 44:
Answer the question: For a host machine that uses the token bucket algorithm for congestion control, the token bucket has a capacity of 1 megabyte and the maximum output rate is 20 megabytes per second. Tokens arrive at a rate to sustain output at a rate of 10 megabytes per second. The token bucket is currently full and the machine needs to send 12 megabytes of data. The minimum time required to transmit the data is _________________ seconds.

A) 1.1
B) 0.1
C) 2.1
D) 2.0

Answer: B) 0.1

Explanation:

The token bucket algorithm works by maintaining a token bucket with a certain capacity. When the output rate exceeds the maximum output rate, tokens are consumed from the bucket at a rate equal to the difference between the output rate and the maximum output rate. In this case, the maximum output rate is 20 megabytes per second, and the output rate is 10 megabytes per second, so tokens are consumed at a rate of 10 megabytes per second - 20 megabytes per second = -10 megabytes per second.

Since the token bucket is currently full, no tokens can be consumed, and the output rate cannot be increased. To transmit 12 megabytes of data, the minimum time required is the time it takes to drain the token bucket, which is equal to the capacity of the token bucket divided by the output rate. In this case, the token bucket has a capacity of 1 megabyte, and the output rate is 10 megabytes per second, so the minimum time required to transmit the data is:

1 megabyte / 10 megabytes per second = 0.1 seconds

Therefore, the minimum time required to transmit the data is 0.1 seconds, or 100 milliseconds.

Prompt 45:
Answer the question: Consider a TCP connection in a state where there are no outstanding ACKs. The sender sends two segments back to back. The sequence numbers of the first and second segments are 230 and 290 respectively. The first segment was lost, but the second segment was received correctly by the receiver. Let X be the amount of data carried in the first segment (in bytes), and Y be the ACK number sent by the receiver. The values of X and Y (in that order) are

A) 60 and 290
B) 230 and 291
C) 60 and 231
D) 60 and 230

Please explain your answer and provide the reasoning behind it.

Prompt 46:
Answer the question: Purpose of a start bit in RS-232 serial communication protocol is

A) to synchronize receiver for receiving every byte
B) to synchronize receiver for receiving a sequence of bytes
C) a parity bit
D) to synchronize receiver for receiving the last byte

Answer: B) to synchronize receiver for receiving a sequence of bytes.

Explanation:

The purpose of a start bit in RS-232 serial communication protocol is to indicate the beginning of a new byte of data. The start bit is a single bit that is transmitted before the data bits, and it is used to synchronize the receiver to expect the data bits that follow.

Without the start bit, the receiver might interpret the data bits as part of a previous byte, leading to errors in data interpretation. The start bit provides a clear indication of the beginning of a new byte, allowing the receiver to properly align its internal state machines to receive the data correctly.

Therefore, option B is the correct answer.

Prompt 47:
Answer the question: Consider an uncompressed stereo audio signal of CD quality which is sampled at 44.1 kHz and quantized using 16 bits. What is the required storage space if a compression ratio of 0.5 is achieved for 10 seconds of this audio?

A) 172 KB
B) 430 KB
C) 860 KB
D) 1720 KB

Answer:

The required storage space for the compressed audio can be calculated using the formula:

Required storage space = (Original audio size \* Compression ratio) / 100

In this case, the original audio size is:

Original audio size = (44.1 kHz \* 16 bits \* 10 seconds) = 44100000 bytes

Compression ratio = 0.5

Required storage space = (44100000 \* 0.5) / 100 = 22050000 bytes

Therefore, the required storage space for the compressed audio is 22050000 bytes, which is approximately 2.2 MB.

So the answer is (C) 860 KB.

Prompt 48:
Answer the question: If the frame buffer has 8 bits per pixel and 8 bits are allocated for each of the R, G, B components, what would be the size of the lookup table?

A) 24 bytes
B) 1024 bytes
C) 768 bytes
D) 256 bytes

Explanation:

The frame buffer has 8 bits per pixel, which means it can store 256 different values for each of the R, G, B components. Since 8 bits are allocated for each component, the total size of the lookup table would be:

Size of lookup table = Number of values x Size of each value
= 256 x 8 bits
= 2048 bits

Therefore, the size of the lookup table would be 2048 bytes (or 256 bytes, depending on the unit of measurement used).

Answer: C) 768 bytes

Prompt 49:
Answer the question: Which one of the following is used to compute cyclomatic complexity?

A) The number of regions – 1
B) E – N + 1, where E is the number of flow graph edges and N is the number of flow graph nodes
C) P – 1, where P is the number of predicate nodes in the flow graph G
D) P + 1, where P is the number of predicate nodes in the flow graph G

I have chosen the answer: B) E – N + 1, where E is the number of flow graph edges and N is the number of flow graph nodes.

Please let me know if my answer is correct or not.

